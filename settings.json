{
  "vim.leader": "space",
  "vim.highlightedyank.enable": true,
  "vim.hlsearch": true,
  "vim.highlightedyank.duration": 50,
  "vim.useSystemClipboard": true,
  "vim.smartRelativeLine": true,
  "editor.cursorSurroundingLines": 15,
  "vim.easymotion": true,
  "vim.easymotionMarkerForegroundColorOneChar": "#ea6962",
  "vim.easymotionMarkerForegroundColorTwoCharFirst": "#ea6962",
  "vim.easymotionMarkerForegroundColorTwoCharSecond": "#ea6962",
  "vim.easymotionIncSearchForegroundColor": "#ea6962",
  "vim.easymotionKeys": "asdfghjkl",
  "vim.normalModeKeyBindings": [
    {
      "before": ["Y"],
      "after": ["y", "$"]
    },
    {
      "before": ["leader", "m"],
      "commands": [":delmarks!"]
    },
    {
      "before": ["esc"],
      "commands": [":nohl"]
    },
    {
      "before": ["enter"],
      "after": ["o", "escape"]
    },
    {
      "before": ["leader", "enter"],
      "after": ["O", "escape"]
    },
    {
      "before": ["s"],
      "after": ["leader", "leader", "leader", "b", "d", "w"]
    },
    {
      "before": ["<leader>", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<leader>", "l"],
      "commands": ["turboConsoleLog.displayLogMessage"]
    },
    {
      "before": ["<leader>", "t"],
      "commands": [
        "workbench.action.splitEditor",
        "workbench.action.createTerminalEditor",
        "workbench.action.closeOtherEditors"
      ]
    },
    {
      "before": ["leader", "a"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["leader", "i", "s"],
      "commands": ["editor.action.organizeImports"]
    },
    {
      "before": [","],
      "commands": ["workbench.view.explorer"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.terminal.toggleTerminal"]
    },
    {
      "before": ["leader", "z"],
      "commands": ["workbench.action.toggleZenMode"],
      "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
      "before": ["tab"],
      "commands": ["workbench.action.openPreviousEditorFromHistory"]
    },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["leader", "s"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["leader", "v"],
      "commands": ["workbench.action.quickTextSearch"]
    },
    {
      "before": ["leader", "d"],
      "commands": ["workbench.action.gotoSymbol"]
    },
    {
      "before": ["leader", "q"],
      "commands": ["workbench.actions.view.problems"]
    },
    {
      "before": ["L"],
      "commands": ["workbench.action.nextEditorInGroup"]
    },
    {
      "before": ["H"],
      "commands": ["workbench.action.previousEditorInGroup"]
    },
    {
      "before": ["leader", "b", "c"],
      "commands": ["workbench.action.closeOtherEditors"]
    },
    {
      "before": ["leader", "x"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    {
      "before": ["leader", "Q"],
      "commands": ["workbench.action.closeEditorsInGroup"]
    },
    {
      "before": ["g", "i"],
      "commands": ["editor.action.goToImplementation"]
    },
    {
      "before": ["g", "p", "i"],
      "commands": ["editor.action.peekImplementation"]
    },
    {
      "before": ["leader", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.referenceSearch.trigger"]
    },
    {
      "before": ["g", "t"],
      "commands": ["editor.action.goToTypeDefinition"]
    },
    {
      "before": ["g", "p", "t"],
      "commands": ["editor.action.peekTypeDefinition"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    {
      "before": ["leader", "r", "n"],
      "commands": ["editor.action.rename"],
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
      "before": ["]", "c"],
      "commands": ["workbench.action.editor.nextChange"]
    },
    {
      "before": ["[", "c"],
      "commands": ["workbench.action.editor.previousChange"]
    },
    {
      "before": ["leader", "r", "r"],
      "commands": ["git.revertSelectedRanges"]
    },
    {
      "before": ["leader", "r", "R"],
      "commands": ["workbench.action.files.revert"]
    }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": ["leader", "r"],
      "commands": ["git.revertSelectedRanges"]
    },
    {
      "before": ["v"],
      "after": ["a", "f"]
    },
    {
      "before": ["V"],
      "commands": ["editor.action.smartSelect.shrink"]
    },
    {
      "before": ["leader", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["leader", "r", "n"],
      "commands": ["editor.action.rename"],
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
      "before": ["leader", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<leader>", "/"],
      "commands": ["editor.action.commentLine"],
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "before": ["<leader>", "f"],
      "commands": ["editor.action.formatSelection"],
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "before": ["<leader>", "a"],
      "commands": ["workbench.action.showCommands"],
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "before": ["m"],
      "after": ["leader", "leader", "s"]
    }
  ],
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[astro]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "files.associations": {
    "*.css": "tailwindcss"
  },
  "editor.quickSuggestions": {
    "strings": "on"
  },
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "workbench.colorCustomizations": {
    "[Kanagawa]": {
      "editorCursor.background": "#413f3d"
    }
  },
  "editor.tokenColorCustomizations": {
    "[Kanagawa]": {
      "comments": {
        "foreground": "#9CA1AA"
      }
    }
  },
  "window.zoomLevel": 0.3,
  // "editor.fontSize": 13.76,
  "editor.fontSize": 13,
  "editor.fontWeight": "600",
  "editor.fontFamily": "JetBrainsMono Nerd Font",
  "editor.codeLensFontFamily": "JetBrainsMono Nerd Font",
  "editor.inlayHints.fontFamily": "JetBrainsMono Nerd Font",
  "editor.inlineSuggest.fontFamily": "JetBrainsMono Nerd Font",
  "debug.console.fontFamily": "JetBrainsMono Nerd Font",
  "scm.inputFontFamily": "JetBrainsMono Nerd Font",
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
  "notebook.output.fontFamily": "JetBrainsMono Nerd Font",
  "chat.editor.fontFamily": "JetBrainsMono Nerd Font",
  "editor.suggest.insertMode": "replace",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "window.commandCenter": false,
  "editor.wordWrap": "on",
  "turboConsoleLog.logMessagePrefix": "TODO: Delete ðŸš€",
  "editor.fontLigatures": false,
  "workbench.startupEditor": "readme",
  "gitlens.blame.fontFamily": "JetBrainsMono Nerd Font",
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "security.workspace.trust.untrustedFiles": "open",
  "gitlens.currentLine.enabled": false,
  "workbench.editor.editorActionsLocation": "hidden",
  "extensions.ignoreRecommendations": true,
  "window.customMenuBarAltFocus": true,
  "scm.diffDecorations": "gutter",
  "keyboard.dispatch": "keyCode",
  "editor.stickyScroll.enabled": false,
  "workbench.tree.indent": 14,
  "workbench.tree.renderIndentGuides": "none",
  "terminal.integrated.fontWeight": "bold",
  "github.copilot.editor.enableAutoCompletions": true,
  "workbench.editor.limit.value": 9,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.showTabs": "multiple",
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },
  "editor.linkedEditing": false,
  "telemetry.telemetryLevel": "off",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "zenMode.hideStatusBar": false,
  "workbench.layoutControl.enabled": false,
  "editor.cursorBlinking": "solid",
  "zenMode.hideActivityBar": true,
  "zenMode.centerLayout": false,
  "zenMode.restore": false,
  "zenMode.hideLineNumbers": false,
  "zenMode.fullScreen": false,
  "window.menuBarVisibility": "toggle",
  "editor.experimental.treeSitterTelemetry": true,
  "vim.showMarksInGutter": true,
  "html.format.indentHandlebars": true,
  "html.format.indentInnerHtml": true,
  "editor.guides.highlightActiveIndentation": false,
  "gitlens.blame.separateLines": false,
  "explorer.confirmPasteNative": false,
  "window.customTitleBarVisibility": "auto",
  "terminal.integrated.scrollback": 200,
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.lineHeight": 1,
  "workbench.iconTheme": "material-icon-theme",
  "glassit-linux.opacity": 99,
  "editor.minimap.enabled": false,
  "color-highlight.markerType": "dot-after",
  "color-highlight.markRuler": false,
  "editor.cursorSmoothCaretAnimation": "on",
  "totalTypeScript.hiddenTips": [
    "typing-function-parameters",
    "basic-types",
    "any-type",
    "variable-type-annotation",
    "passing-generics-to-types",
    "partial-utility-type",
    "type-alias-declaration",
    "type-alias-with-generics",
    "ts-object-type",
    "optional-object-property",
    "interface-declaration",
    "interface-with-generics",
    "array-type",
    "generic-slots-in-functions",
    "function-return-type",
    "as-assertion",
    "as-const",
    "as-const-on-object",
    "union-type",
    "null-keyword",
    "record-utility-type",
    "non-null-expression",
    "undefined-keyword"
  ],
  "todohighlight.keywords": [
    {
      "text": "TODO:",
      "color": "#32302f",
      "backgroundColor": "#7daea3"
    }
  ],
  "workbench.colorTheme": "Gruvbox Material Dark"
}
